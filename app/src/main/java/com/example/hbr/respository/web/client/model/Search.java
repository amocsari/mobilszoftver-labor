/*
 * Swagger GoodReadsApi
 * This is a sample server Petstore server. You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.hbr.respository.web.client.model;

import com.google.gson.annotations.SerializedName;

import org.simpleframework.xml.Element;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Search
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-02T19:01:15.591+02:00[Europe/Prague]")
public class Search implements Serializable {
  @SerializedName("query")
  @Element(name = "query", required = false)
  private String query = null;

  @SerializedName("results-start")
  @Element(name = "results-start", required = false)
  private Long resultsStart = null;

  @SerializedName("results-end")
  @Element(name = "results-end", required = false)
  private Long resultsEnd = null;

  @SerializedName("total-results")
  @Element(name = "total-results", required = false)
  private Long totalResults = null;

  @SerializedName("source")
  @Element(name = "source", required = false)
  private String source = null;

  @SerializedName("query-time-seconds")
  @Element(name = "query-time-seconds", required = false)
  private BigDecimal queryTimeSeconds = null;

  @SerializedName("results")
  @Element(name = "results", required = false)
  private Results results = null;

  public Search query(String query) {
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @Schema(description = "")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }

  public Search resultsStart(Long resultsStart) {
    this.resultsStart = resultsStart;
    return this;
  }

   /**
   * Get resultsStart
   * @return resultsStart
  **/
  @Schema(description = "")
  public Long getResultsStart() {
    return resultsStart;
  }

  public void setResultsStart(Long resultsStart) {
    this.resultsStart = resultsStart;
  }

  public Search resultsEnd(Long resultsEnd) {
    this.resultsEnd = resultsEnd;
    return this;
  }

   /**
   * Get resultsEnd
   * @return resultsEnd
  **/
  @Schema(description = "")
  public Long getResultsEnd() {
    return resultsEnd;
  }

  public void setResultsEnd(Long resultsEnd) {
    this.resultsEnd = resultsEnd;
  }

  public Search totalResults(Long totalResults) {
    this.totalResults = totalResults;
    return this;
  }

   /**
   * Get totalResults
   * @return totalResults
  **/
  @Schema(description = "")
  public Long getTotalResults() {
    return totalResults;
  }

  public void setTotalResults(Long totalResults) {
    this.totalResults = totalResults;
  }

  public Search source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public Search queryTimeSeconds(BigDecimal queryTimeSeconds) {
    this.queryTimeSeconds = queryTimeSeconds;
    return this;
  }

   /**
   * Get queryTimeSeconds
   * @return queryTimeSeconds
  **/
  @Schema(description = "")
  public BigDecimal getQueryTimeSeconds() {
    return queryTimeSeconds;
  }

  public void setQueryTimeSeconds(BigDecimal queryTimeSeconds) {
    this.queryTimeSeconds = queryTimeSeconds;
  }

  public Search results(Results results) {
    this.results = results;
    return this;
  }

   /**
   * Get results
   * @return results
  **/
  @Schema(description = "")
  public Results getResults() {
    return results;
  }

  public void setResults(Results results) {
    this.results = results;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Search search = (Search) o;
    return Objects.equals(this.query, search.query) &&
        Objects.equals(this.resultsStart, search.resultsStart) &&
        Objects.equals(this.resultsEnd, search.resultsEnd) &&
        Objects.equals(this.totalResults, search.totalResults) &&
        Objects.equals(this.source, search.source) &&
        Objects.equals(this.queryTimeSeconds, search.queryTimeSeconds) &&
        Objects.equals(this.results, search.results);
  }

  @Override
  public int hashCode() {
    return Objects.hash(query, resultsStart, resultsEnd, totalResults, source, queryTimeSeconds, results);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Search {\n");

    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    resultsStart: ").append(toIndentedString(resultsStart)).append("\n");
    sb.append("    resultsEnd: ").append(toIndentedString(resultsEnd)).append("\n");
    sb.append("    totalResults: ").append(toIndentedString(totalResults)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    queryTimeSeconds: ").append(toIndentedString(queryTimeSeconds)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
