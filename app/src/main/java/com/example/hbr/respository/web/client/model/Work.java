/*
 * Swagger GoodReadsApi
 * This is a sample server Petstore server. You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.hbr.respository.web.client.model;

import com.google.gson.annotations.SerializedName;

import org.simpleframework.xml.Element;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Work
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-02T19:01:15.591+02:00[Europe/Prague]")
public class Work implements Serializable {
  @SerializedName("id")
  @Element(name = "id", required = false)
  private Long id = null;

  @SerializedName("books_count")
  @Element(name = "books_count", required = false)
  private Long booksCount = null;

  @SerializedName("ratings_count")
  @Element(name = "ratings_count", required = false)
  private Long ratingsCount = null;

  @SerializedName("text_reviews_count")
  @Element(name = "text_reviews_count", required = false)
  private Long textReviewsCount = null;

  @SerializedName("original_publication_year")
  @Element(name = "original_publication_year", required = false)
  private Long originalPublicationYear = null;

  @SerializedName("original_publication_month")
  @Element(name = "original_publication_month", required = false)
  private Long originalPublicationMonth = null;

  @SerializedName("original_publication_day")
  @Element(name = "original_publication_day", required = false)
  private Long originalPublicationDay = null;

  @SerializedName("average_rating")
  @Element(name = "average_rating", required = false)
  private BigDecimal averageRating = null;

  @SerializedName("best_book")
  @Element(name = "best_book", required = false)
  private Book bestBook = null;

  public Work id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Work booksCount(Long booksCount) {
    this.booksCount = booksCount;
    return this;
  }

   /**
   * Get booksCount
   * @return booksCount
  **/
  @Schema(description = "")
  public Long getBooksCount() {
    return booksCount;
  }

  public void setBooksCount(Long booksCount) {
    this.booksCount = booksCount;
  }

  public Work ratingsCount(Long ratingsCount) {
    this.ratingsCount = ratingsCount;
    return this;
  }

   /**
   * Get ratingsCount
   * @return ratingsCount
  **/
  @Schema(description = "")
  public Long getRatingsCount() {
    return ratingsCount;
  }

  public void setRatingsCount(Long ratingsCount) {
    this.ratingsCount = ratingsCount;
  }

  public Work textReviewsCount(Long textReviewsCount) {
    this.textReviewsCount = textReviewsCount;
    return this;
  }

   /**
   * Get textReviewsCount
   * @return textReviewsCount
  **/
  @Schema(description = "")
  public Long getTextReviewsCount() {
    return textReviewsCount;
  }

  public void setTextReviewsCount(Long textReviewsCount) {
    this.textReviewsCount = textReviewsCount;
  }

  public Work originalPublicationYear(Long originalPublicationYear) {
    this.originalPublicationYear = originalPublicationYear;
    return this;
  }

   /**
   * Get originalPublicationYear
   * @return originalPublicationYear
  **/
  @Schema(description = "")
  public Long getOriginalPublicationYear() {
    return originalPublicationYear;
  }

  public void setOriginalPublicationYear(Long originalPublicationYear) {
    this.originalPublicationYear = originalPublicationYear;
  }

  public Work originalPublicationMonth(Long originalPublicationMonth) {
    this.originalPublicationMonth = originalPublicationMonth;
    return this;
  }

   /**
   * Get originalPublicationMonth
   * @return originalPublicationMonth
  **/
  @Schema(description = "")
  public Long getOriginalPublicationMonth() {
    return originalPublicationMonth;
  }

  public void setOriginalPublicationMonth(Long originalPublicationMonth) {
    this.originalPublicationMonth = originalPublicationMonth;
  }

  public Work originalPublicationDay(Long originalPublicationDay) {
    this.originalPublicationDay = originalPublicationDay;
    return this;
  }

   /**
   * Get originalPublicationDay
   * @return originalPublicationDay
  **/
  @Schema(description = "")
  public Long getOriginalPublicationDay() {
    return originalPublicationDay;
  }

  public void setOriginalPublicationDay(Long originalPublicationDay) {
    this.originalPublicationDay = originalPublicationDay;
  }

  public Work averageRating(BigDecimal averageRating) {
    this.averageRating = averageRating;
    return this;
  }

   /**
   * Get averageRating
   * @return averageRating
  **/
  @Schema(description = "")
  public BigDecimal getAverageRating() {
    return averageRating;
  }

  public void setAverageRating(BigDecimal averageRating) {
    this.averageRating = averageRating;
  }

  public Work bestBook(Book bestBook) {
    this.bestBook = bestBook;
    return this;
  }

   /**
   * Get bestBook
   * @return bestBook
  **/
  @Schema(description = "")
  public Book getBestBook() {
    return bestBook;
  }

  public void setBestBook(Book bestBook) {
    this.bestBook = bestBook;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Work work = (Work) o;
    return Objects.equals(this.id, work.id) &&
        Objects.equals(this.booksCount, work.booksCount) &&
        Objects.equals(this.ratingsCount, work.ratingsCount) &&
        Objects.equals(this.textReviewsCount, work.textReviewsCount) &&
        Objects.equals(this.originalPublicationYear, work.originalPublicationYear) &&
        Objects.equals(this.originalPublicationMonth, work.originalPublicationMonth) &&
        Objects.equals(this.originalPublicationDay, work.originalPublicationDay) &&
        Objects.equals(this.averageRating, work.averageRating) &&
        Objects.equals(this.bestBook, work.bestBook);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, booksCount, ratingsCount, textReviewsCount, originalPublicationYear, originalPublicationMonth, originalPublicationDay, averageRating, bestBook);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Work {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    booksCount: ").append(toIndentedString(booksCount)).append("\n");
    sb.append("    ratingsCount: ").append(toIndentedString(ratingsCount)).append("\n");
    sb.append("    textReviewsCount: ").append(toIndentedString(textReviewsCount)).append("\n");
    sb.append("    originalPublicationYear: ").append(toIndentedString(originalPublicationYear)).append("\n");
    sb.append("    originalPublicationMonth: ").append(toIndentedString(originalPublicationMonth)).append("\n");
    sb.append("    originalPublicationDay: ").append(toIndentedString(originalPublicationDay)).append("\n");
    sb.append("    averageRating: ").append(toIndentedString(averageRating)).append("\n");
    sb.append("    bestBook: ").append(toIndentedString(bestBook)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
